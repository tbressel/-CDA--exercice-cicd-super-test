name: super ci of the dead

on:
  push:
    branches:
      - main

jobs:
  install-and-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node audit
        uses: luisfontes19/npm-audit-action@v0.1.0
        with:
          only: prod
          level: moderate
          project-path: .

  install-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: EsLint
        run: npx eslint .

  run-tests:
    runs-on: ubuntu-latest
    needs: 
      - install-and-lint
      - install-and-audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npx vitest
  
  build-frontend:
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

  deploy-to-vps:
    runs-on: ubuntu-latest
    needs:
      - build-frontend
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./dist
       
      - name: Send build to VPS ~/frontend (create if not exists)
        run: |
          echo "${{ secrets.VPS_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          ssh -i private_key -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ~/frontend"
          scp -i private_key -P ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no -r ./dist/* ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/frontend

      - name: Optional - Execute remote SSH commands
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo "✅ Fichiers reçus sur le VPS !"
            # Exemple : redémarrer un service
            # sudo systemctl restart mon-service