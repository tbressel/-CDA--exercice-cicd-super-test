name: super ci of the dead

on:
  push:
    branches:
      - main

jobs:
  install-and-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node audit
        uses: luisfontes19/npm-audit-action@v0.1.0
        with:
          only: prod
          level: moderate
          project-path: .

  install-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: EsLint
        run: npx eslint .

  run-tests:
    runs-on: ubuntu-latest
    needs: 
      - install-and-lint
      - install-and-audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npx vitest



  deploy-to-vps:
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add GitHub.com to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: SSH deploy commands
        run: |
          ssh -i private_key -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=yes ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /var/www/frontend && git pull origin main"
        env:
          private_key: ${{ secrets.VPS_PRIVATE_KEY }}


  
  # build-frontend:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - run-tests
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Build Application
  #       run: npm run build

  #     - name: Upload build artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: build-artifact
  #         path: dist/

  # deploy-to-vps:
  #  runs-on: ubuntu-latest
  #  needs:
  #    - build-frontend
  #  steps:
  #    - name: Download build artifact
  #      uses: actions/download-artifact@v4
  #      with:
  #        name: build-artifact
  #        path: ./dist
        
  #    - name: Send build to VPS /home/thomasb/frontend (create if not exists)
  #      run: |
  #        echo "${{ secrets.VPS_PRIVATE_KEY }}" > private_key
  #        chmod 600 private_key
  #        ssh -i private_key -p ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no thomasb@${{ secrets.VPS_HOST }} "mkdir -p /home/thomasb/frontend && rm -rf /home/thomasb/frontend/*"
  #        scp -i private_key -P ${{ secrets.VPS_PORT }} -o StrictHostKeyChecking=no -r ./dist/* thomasb@${{ secrets.VPS_HOST }}:/home/thomasb/frontend/
  #        rm private_key
        
  #    - name: Optional - Execute remote SSH commands
  #      uses: appleboy/ssh-action@v1
  #      with:
  #        host: ${{ secrets.VPS_HOST }}
  #        username: thomasb
  #        key: ${{ secrets.VPS_PRIVATE_KEY }}
  #        port: ${{ secrets.VPS_PORT }}
  #        script: |
  #          echo "✅ Fichiers reçus sur le VPS !"
